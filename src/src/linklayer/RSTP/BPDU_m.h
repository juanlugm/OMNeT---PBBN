//
// Generated file, do not edit! Created by opp_msgc 4.1 from linklayer/RSTP/BPDU.msg.
//

#ifndef _BPDU_M_H_
#define _BPDU_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0401
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "MACAddress.h"
#include "EtherFrame_m.h"
// }}



/**
 * Class generated from <tt>linklayer/RSTP/BPDU.msg</tt> by opp_msgc.
 * <pre>
 * packet BPDU extends EtherFrame
 * {
 *     string displayString = "b=,,,#a5a5ff";
 *     @customize(true);			
 *     int rootPriority;			
 *     MACAddress rootMAC;			
 *     int cost;					
 *     int SrcPriority;  			
 *     int PortPriority;			
 *     int PortNumber;				
 *     int age;					
 *     bool TC;					
 *     bool Ack;					
 * }
 * </pre>
 *
 * BPDU_Base is only useful if it gets subclassed, and BPDU is derived from it.
 * The minimum code to be written for BPDU is the following:
 *
 * <pre>
 * class BPDU : public BPDU_Base
 * {
 *   public:
 *     BPDU() : BPDU_Base() {}
 *     BPDU(const BPDU& other) : BPDU_Base() {operator=(other);}
 *     BPDU& operator=(const BPDU& other) {BPDU_Base::operator=(other); return *this;}
 *     // ADD CODE HERE to redefine and implement pure virtual functions from BPDU_Base
 * };
 * </pre>
 */
class BPDU_Base : public ::EtherFrame
{
  protected:
    opp_string displayString_var;
    int rootPriority_var;
    ::MACAddress rootMAC_var;
    int cost_var;
    int SrcPriority_var;
    int PortPriority_var;
    int PortNumber_var;
    int age_var;
    bool TC_var;
    bool Ack_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BPDU_Base&);
    // make constructors protected to avoid instantiation
    BPDU_Base();
    BPDU_Base(const BPDU_Base& other);
    // make assignment operator protected to force the user override it
    BPDU_Base& operator=(const BPDU_Base& other);

  public:
    virtual ~BPDU_Base();
    virtual BPDU_Base *dup() const {throw cRuntimeError("You forgot to manually add a dup() function to class BPDU");}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * getDisplayString() const;
    virtual void setDisplayString(const char * displayString_var);
    virtual int getRootPriority() const;
    virtual void setRootPriority(int rootPriority_var);
    virtual MACAddress& getRootMAC();
    virtual const MACAddress& getRootMAC() const {return const_cast<BPDU_Base*>(this)->getRootMAC();}
    virtual void setRootMAC(const MACAddress& rootMAC_var);
    virtual int getCost() const;
    virtual void setCost(int cost_var);
    virtual int getSrcPriority() const;
    virtual void setSrcPriority(int SrcPriority_var);
    virtual int getPortPriority() const;
    virtual void setPortPriority(int PortPriority_var);
    virtual int getPortNumber() const;
    virtual void setPortNumber(int PortNumber_var);
    virtual int getAge() const;
    virtual void setAge(int age_var);
    virtual bool getTC() const;
    virtual void setTC(bool TC_var);
    virtual bool getAck() const;
    virtual void setAck(bool Ack_var);
};


#endif // _BPDU_M_H_
