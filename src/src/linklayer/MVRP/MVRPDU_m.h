//
// Generated file, do not edit! Created by opp_msgc 4.1 from linklayer/MVRP/MVRPDU.msg.
//

#ifndef _MVRPDU_M_H_
#define _MVRPDU_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0401
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "MACAddress.h"
#include "EtherFrame_m.h"
#include "8021Q.h"
// }}



/**
 * Class generated from <tt>linklayer/MVRP/MVRPDU.msg</tt> by opp_msgc.
 * <pre>
 * packet MVRPDU extends EtherFrame
 * {
 *     string displayString = "b=,,,#ffa5a5";
 *     @customize(true);			
 *     unsigned int VIDS [];	
 *     unsigned int PortIndex;  
 * }
 * </pre>
 *
 * MVRPDU_Base is only useful if it gets subclassed, and MVRPDU is derived from it.
 * The minimum code to be written for MVRPDU is the following:
 *
 * <pre>
 * class MVRPDU : public MVRPDU_Base
 * {
 *   public:
 *     MVRPDU() : MVRPDU_Base() {}
 *     MVRPDU(const MVRPDU& other) : MVRPDU_Base() {operator=(other);}
 *     MVRPDU& operator=(const MVRPDU& other) {MVRPDU_Base::operator=(other); return *this;}
 *     // ADD CODE HERE to redefine and implement pure virtual functions from MVRPDU_Base
 * };
 * </pre>
 */
class MVRPDU_Base : public ::EtherFrame
{
  protected:
    opp_string displayString_var;
    unsigned int *VIDS_var; // array ptr
    unsigned int VIDS_arraysize;
    unsigned int PortIndex_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MVRPDU_Base&);
    // make constructors protected to avoid instantiation
    MVRPDU_Base();
    MVRPDU_Base(const MVRPDU_Base& other);
    // make assignment operator protected to force the user override it
    MVRPDU_Base& operator=(const MVRPDU_Base& other);

  public:
    virtual ~MVRPDU_Base();
    virtual MVRPDU_Base *dup() const {throw cRuntimeError("You forgot to manually add a dup() function to class MVRPDU");}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * getDisplayString() const;
    virtual void setDisplayString(const char * displayString_var);
    virtual void setVIDSArraySize(unsigned int size);
    virtual unsigned int getVIDSArraySize() const;
    virtual unsigned int getVIDS(unsigned int k) const;
    virtual void setVIDS(unsigned int k, unsigned int VIDS_var);
    virtual unsigned int getPortIndex() const;
    virtual void setPortIndex(unsigned int PortIndex_var);
};


#endif // _MVRPDU_M_H_
